<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="serializer.mapping.cache.prefix" />
    </parameters>

    <services>
        <service id="serializer" class="Symfony\Component\Serializer\Serializer">
            <argument type="collection" />
            <argument type="collection" />
        </service>

        <service id="serializer.property_accessor" alias="property_accessor" public="false" />

        <!-- Normalizer -->
        <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" public="false">
            <argument type="service" id="serializer.mapping.class_metadata_factory" />
            <argument>null</argument> <!-- name converter -->
            <argument type="service" id="serializer.property_accessor" />
            <argument type="service" id="property_info" on-invalid="ignore" />

            <!-- Run after all custom normalizers -->
            <tag name="serializer.normalizer" priority="-1000" />
        </service>

        <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer" public="false">
            <!-- Run before the object normalizer -->
            <tag name="serializer.normalizer" priority="-990" />
        </service>

        <!-- Loader -->
        <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain" public="false">
            <argument type="collection" />
        </service>

        <!-- Class Metadata Factory -->
        <service id="serializer.mapping.class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory" public="false">
            <argument type="service" id="serializer.mapping.chain_loader" />
            <argument>null</argument>
        </service>

        <!-- Cache -->
        <service id="serializer.mapping.cache.doctrine.apc" class="Doctrine\Common\Cache\ApcCache" public="false">
            <call method="setNamespace">
                <argument>%serializer.mapping.cache.prefix%</argument>
            </call>
        </service>

        <service id="serializer.mapping.cache.apc" parent="serializer.mapping.cache.doctrine.apc">
            <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0. Use "serializer.mapping.cache.doctrine.apc" instead</deprecated>
        </service>

        <!-- Encoders -->
        <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder" public="false">
            <tag name="serializer.encoder" />
        </service>

        <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder" public="false">
            <tag name="serializer.encoder" />
        </service>

        <!-- Name converter -->
        <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter" public="false" />

        <!-- PropertyInfo extractor -->
        <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor" public="false">
            <argument type="service" id="serializer.mapping.class_metadata_factory" />

            <tag name="property_info.list_extractor" priority="-999" />
        </service>
    </services>
</container>
